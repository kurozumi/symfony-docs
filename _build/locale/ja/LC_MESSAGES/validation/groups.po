# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Symfony Framework
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-08 14:21+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../../validation/groups.rst:5
msgid ""
"How to Apply only a Subset of all Your Validation Constraints (Validation"
" Groups)"
msgstr ""

#: ../../../validation/groups.rst:7
msgid ""
"By default, when validating an object all constraints of this class will "
"be checked whether or not they actually pass. In some cases, however, you"
" will need to validate an object against only *some* constraints on that "
"class. To do this, you can organize each constraint into one or more "
"\"validation groups\" and then apply validation against just one group of"
" constraints."
msgstr ""

#: ../../../validation/groups.rst:13
msgid ""
"For example, suppose you have a ``User`` class, which is used both when a"
" user registers and when a user updates their contact information later:"
msgstr ""

#: ../../../validation/groups.rst:131
msgid "With this configuration, there are three validation groups:"
msgstr ""

#: ../../../validation/groups.rst:136
msgid "``Default``"
msgstr ""

#: ../../../validation/groups.rst:134
msgid ""
"Contains the constraints in the current class and all referenced classes "
"that belong to no other group. In this example, it only contains the "
"``city`` field."
msgstr ""

#: ../../../validation/groups.rst:141
msgid "``User``"
msgstr ""

#: ../../../validation/groups.rst:139
msgid ""
"Equivalent to all constraints of the ``User`` object in the ``Default`` "
"group. This is always the name of the class. The difference between this "
"and ``Default`` is explained in :doc:`/validation/sequence_provider`."
msgstr ""

#: ../../../validation/groups.rst:146
msgid "``registration``"
msgstr ""

#: ../../../validation/groups.rst:144
msgid ""
"This is a custom validation group, so it only contains the constraints "
"explicitly associated to it. In this example, only the ``email`` and "
"``password`` fields."
msgstr ""

#: ../../../validation/groups.rst:148
msgid ""
"Constraints in the ``Default`` group of a class are the constraints that "
"have either no explicit group configured or that are configured to a "
"group equal to the class name or the string ``Default``."
msgstr ""

#: ../../../validation/groups.rst:154
msgid ""
"When validating *just* the User object, there is no difference between "
"the ``Default`` group and the ``User`` group. But, there is a difference "
"if ``User`` has embedded objects. For example, imagine ``User`` has an "
"``address`` property that contains some ``Address`` object and that "
"you've added the :doc:`/reference/constraints/Valid` constraint to this "
"property so that it's validated when you validate the ``User`` object."
msgstr ""

#: ../../../validation/groups.rst:161
msgid ""
"If you validate ``User`` using the ``Default`` group, then any "
"constraints on the ``Address`` class that are in the ``Default`` group "
"*will* be used. But, if you validate ``User`` using the ``User`` "
"validation group, then only constraints on the ``Address`` class with the"
" ``User`` group will be validated."
msgstr ""

#: ../../../validation/groups.rst:167
msgid ""
"In other words, the ``Default`` group and the class name group (e.g. "
"``User``) are identical, except when the class is embedded in another "
"object that's actually the one being validated."
msgstr ""

#: ../../../validation/groups.rst:171
msgid ""
"If you have inheritance (e.g. ``User extends BaseUser``) and you validate"
" with the class name of the subclass (i.e. ``User``), then all "
"constraints in the ``User`` and ``BaseUser`` will be validated. However, "
"if you validate using the base class (i.e. ``BaseUser``), then only the "
"default constraints in the ``BaseUser`` class will be validated."
msgstr ""

#: ../../../validation/groups.rst:177
msgid ""
"To tell the validator to use a specific group, pass one or more group "
"names as the third argument to the ``validate()`` method::"
msgstr ""

#: ../../../validation/groups.rst:182
msgid ""
"If no groups are specified, all constraints that belong to the group "
"``Default`` will be applied."
msgstr ""

#: ../../../validation/groups.rst:185
msgid ""
"In a full stack Symfony project, you'll usually work with validation "
"indirectly through the form library. For information on how to use "
"validation groups inside forms, see :doc:`/form/validation_groups`."
msgstr ""

