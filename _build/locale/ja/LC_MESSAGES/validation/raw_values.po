# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Symfony Framework
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-08 14:21+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../../validation/raw_values.rst:5
msgid "How to Validate Raw Values (Scalar Values and Arrays)"
msgstr ""

#: ../../../validation/raw_values.rst:7
msgid ""
"Usually you will be validating entire objects. But sometimes, you just "
"want to validate a simple value - like to verify that a string is a valid"
" email address. From inside a controller, it looks like this::"
msgstr ""

#: ../../../validation/raw_values.rst:40
msgid ""
"By calling ``validate()`` on the validator, you can pass in a raw value "
"and the constraint object that you want to validate that value against. A"
" full list of the available constraints - as well as the full class name "
"for each constraint - is available in the :doc:`constraints reference "
"</reference/constraints>` section."
msgstr ""

#: ../../../validation/raw_values.rst:46
msgid "Validation of arrays is possible using the ``Collection`` constraint::"
msgstr ""

#: ../../../validation/raw_values.rst:104
msgid ""
"The ``validate()`` method returns a "
":class:`Symfony\\\\Component\\\\Validator\\\\ConstraintViolationList` "
"object, which acts just like an array of errors. Each error in the "
"collection is a "
":class:`Symfony\\\\Component\\\\Validator\\\\ConstraintViolation` object,"
" which holds the error message on its ``getMessage()`` method."
msgstr ""

