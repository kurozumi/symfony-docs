# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Symfony Framework
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-08 14:21+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../../console/calling_commands.rst:2
msgid "How to Call Other Commands"
msgstr ""

#: ../../../console/calling_commands.rst:4
msgid ""
"If a command depends on another one being run before it, instead of "
"asking the user to remember the order of execution, you can call it "
"directly yourself. This is also useful if you want to create a \"meta\" "
"command that just runs a bunch of other commands (for instance, all "
"commands that need to be run when the project's code has changed on the "
"production servers: clearing the cache, generating Doctrine2 proxies, "
"dumping web assets, ...)."
msgstr ""

#: ../../../console/calling_commands.rst:11
msgid "Calling a command from another one is straightforward::"
msgstr ""

#: ../../../console/calling_commands.rst:34
msgid ""
"First, you :method:`Symfony\\\\Component\\\\Console\\\\Application::find`"
" the command you want to execute by passing the command name. Then, you "
"need to create a new "
":class:`Symfony\\\\Component\\\\Console\\\\Input\\\\ArrayInput` with the "
"arguments and options you want to pass to the command."
msgstr ""

#: ../../../console/calling_commands.rst:39
msgid ""
"Eventually, calling the ``run()`` method actually executes the command "
"and returns the returned code from the command (return value from "
"command's ``execute()`` method)."
msgstr ""

#: ../../../console/calling_commands.rst:45
msgid ""
"If you want to suppress the output of the executed command, pass a "
":class:`Symfony\\\\Component\\\\Console\\\\Output\\\\NullOutput` as the "
"second argument to ``$command->run()``."
msgstr ""

#: ../../../console/calling_commands.rst:51
msgid ""
"Note that all the commands will run in the same process and some of "
"Symfony's built-in commands may not work well this way. For instance, the"
" ``cache:clear`` and ``cache:warmup`` commands change some class "
"definitions, so running something after them is likely to break."
msgstr ""

#: ../../../console/calling_commands.rst:58
msgid ""
"Most of the times, calling a command from code that is not executed on "
"the command line is not a good idea. The main reason is that the "
"command's output is optimized for the console and not to be passed to "
"other commands."
msgstr ""

