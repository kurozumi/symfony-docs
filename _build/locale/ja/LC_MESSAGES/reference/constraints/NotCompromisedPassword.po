# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Symfony Framework
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-08 14:21+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../../reference/constraints/NotCompromisedPassword.rst:2
msgid "NotCompromisedPassword"
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:4
msgid ""
"Validates that the given password has not been compromised by checking "
"that it is not included in any of the public data breaches tracked by "
"`haveibeenpwned.com`_."
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:8
msgid "Applies to"
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:8
msgid ":ref:`property or method <validation-property-target>`"
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:9
msgid "Options"
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:9
msgid "`groups`_"
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:10
msgid "`message`_"
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:11
msgid "`payload`_"
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:12
msgid "`skipOnError`_"
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:13
msgid "`threshold`_"
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:14
msgid "Class"
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:14
msgid ":class:`Symfony\\\\Component\\\\Validator\\\\Constraints\\\\NotCompromisedPassword`"
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:15
msgid "Validator"
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:15
msgid ":class:`Symfony\\\\Component\\\\Validator\\\\Constraints\\\\NotCompromisedPasswordValidator`"
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:19
msgid "Basic Usage"
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:21
msgid ""
"The following constraint ensures that the ``rawPassword`` property of the"
" ``User`` class doesn't store a compromised password:"
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:80
msgid ""
"In order to make the password validation, this constraint doesn't send "
"the raw password value to the ``haveibeenpwned.com`` API. Instead, it "
"follows a secure process known as `k-anonimity password validation`_."
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:84
msgid ""
"In practice, the raw password is hashed using SHA-1 and only the first "
"bytes of the hash are sent. Then, the ``haveibeenpwned.com`` API compares"
" those bytes with the SHA-1 hashes of all leaked passwords and returns "
"the list of hashes that start with those same bytes. That's how the "
"constraint can check if the password has been compromised without fully "
"disclosing it."
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:90
msgid ""
"For example, if the password is ``test``, the entire SHA-1 hash is "
"``a94a8fe5ccb19ba61c4c0873d391e987982fbbd3`` but the validator only sends"
" ``a94a8`` to the ``haveibeenpwned.com`` API."
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:96
msgid ""
"When using this constraint inside a Symfony application, define the "
":ref:`not_compromised_password <reference-validation-not-compromised-"
"password>` option to avoid making HTTP requests in the ``dev`` and "
"``test`` environments."
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:101
msgid "Available Options"
msgstr ""

#: ../../../reference/constraints/_groups-option.rst.inc:2
msgid "``groups``"
msgstr ""

#: ../../../reference/constraints/_groups-option.rst.inc:4
msgid "**type**: ``array`` | ``string``"
msgstr ""

#: ../../../reference/constraints/_groups-option.rst.inc:6
msgid ""
"It defines the validation group or groups this constraint belongs to. "
"Read more about :doc:`validation groups </validation/groups>`."
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:106
msgid "message"
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:108
msgid ""
"**type**: ``string`` **default**: ``This password has been leaked in a "
"data breach, it must not be used. Please use another password.``"
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:110
msgid "The default message supplied when the password has been compromised."
msgstr ""

#: ../../../reference/constraints/_payload-option.rst.inc:2
msgid "``payload``"
msgstr ""

#: ../../../reference/constraints/_payload-option.rst.inc:4
msgid "**type**: ``mixed`` **default**: ``null``"
msgstr ""

#: ../../../reference/constraints/_payload-option.rst.inc:6
msgid ""
"This option can be used to attach arbitrary domain-specific data to a "
"constraint. The configured payload is not used by the Validator "
"component, but its processing is completely up to you."
msgstr ""

#: ../../../reference/constraints/_payload-option.rst.inc:10
msgid ""
"For example, you may want to use :doc:`several error levels "
"</validation/severity>` to present failed constraints differently in the "
"front-end depending on the severity of the error."
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:115
msgid "skipOnError"
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:117
msgid "**type**: ``boolean`` **default**: ``false``"
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:119
msgid ""
"When the HTTP request made to the ``haveibeenpwned.com`` API fails for "
"any reason, an exception is thrown (no validation error is displayed). "
"Set this option to ``true`` to not throw the exception and consider the "
"password valid."
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:124
msgid "threshold"
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:126
msgid "**type**: ``integer`` **default**: ``1``"
msgstr ""

#: ../../../reference/constraints/NotCompromisedPassword.rst:128
msgid ""
"This value defines the number of times a password should have been leaked"
" publicly to consider it compromised. Think carefully before setting this"
" option to a higher value because it could decrease the security of your "
"application."
msgstr ""

