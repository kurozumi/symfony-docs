# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Symfony Framework
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-08 14:21+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../../reference/constraints/Sequentially.rst:2
msgid "Sequentially"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:4
msgid ""
"This constraint allows you to apply a set of rules that should be "
"validated step-by-step, allowing to interrupt the validation once the "
"first violation is raised."
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:7
msgid ""
"As an alternative in situations ``Sequentially`` cannot solve, you may "
"consider using :doc:`GroupSequence</validation/sequence_provider>` which "
"allows more control."
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:12
msgid "The ``Sequentially`` constraint was introduced in Symfony 5.1."
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:15
msgid "Applies to"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:15
msgid ":ref:`property or method <validation-property-target>`"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:16
#: ../../../reference/constraints/Sequentially.rst:132
msgid "Options"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:16
msgid "`constraints`_"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:17
msgid "`groups`_"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:18
msgid "`payload`_"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:19
msgid "Class"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:19
msgid ":class:`Symfony\\\\Component\\\\Validator\\\\Constraints\\\\Sequentially`"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:20
msgid "Validator"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:20
msgid ":class:`Symfony\\\\Component\\\\Validator\\\\Constraints\\\\SequentiallyValidator`"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:24
msgid "Basic Usage"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:26
msgid ""
"Suppose that you have a ``Place`` object with an ``$address`` property "
"which must match the following requirements:"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:29
msgid "it's a non-blank string"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:30
msgid "of at least 10 chars long"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:31
msgid "with a specific format"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:32
msgid "and geolocalizable using an external service"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:34
msgid "In such situations, you may encounter three issues:"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:36
msgid ""
"the ``Length`` or ``Regex`` constraints may fail hard with a "
":class:`Symfony\\\\Component\\\\Validator\\\\Exception\\\\UnexpectedValueException`"
" exception if the actual value is not a string, as enforced by ``Type``."
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:38
msgid "you may end with multiple error messages for the same property"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:39
msgid ""
"you may perform a useless and heavy external call to geolocalize the "
"address, while the format isn't valid."
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:42
msgid ""
"You can validate each of these constraints sequentially to solve these "
"issues:"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:135
msgid "``constraints``"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:137
msgid "**type**: ``array`` [:ref:`default option <validation-default-option>`]"
msgstr ""

#: ../../../reference/constraints/Sequentially.rst:139
msgid ""
"This required option is the array of validation constraints that you want"
" to apply sequentially."
msgstr ""

#: ../../../reference/constraints/_groups-option.rst.inc:2
msgid "``groups``"
msgstr ""

#: ../../../reference/constraints/_groups-option.rst.inc:4
msgid "**type**: ``array`` | ``string``"
msgstr ""

#: ../../../reference/constraints/_groups-option.rst.inc:6
msgid ""
"It defines the validation group or groups this constraint belongs to. "
"Read more about :doc:`validation groups </validation/groups>`."
msgstr ""

#: ../../../reference/constraints/_payload-option.rst.inc:2
msgid "``payload``"
msgstr ""

#: ../../../reference/constraints/_payload-option.rst.inc:4
msgid "**type**: ``mixed`` **default**: ``null``"
msgstr ""

#: ../../../reference/constraints/_payload-option.rst.inc:6
msgid ""
"This option can be used to attach arbitrary domain-specific data to a "
"constraint. The configured payload is not used by the Validator "
"component, but its processing is completely up to you."
msgstr ""

#: ../../../reference/constraints/_payload-option.rst.inc:10
msgid ""
"For example, you may want to use :doc:`several error levels "
"</validation/severity>` to present failed constraints differently in the "
"front-end depending on the severity of the error."
msgstr ""

