# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Symfony Framework
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-08 14:21+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../../routing/routing_from_database.rst:5
msgid "Looking up Routes from a Database: Symfony CMF DynamicRouter"
msgstr ""

#: ../../../routing/routing_from_database.rst:7
msgid ""
"The core Symfony Routing System is excellent at handling complex sets of "
"routes. A highly optimized routing cache is dumped during deployments."
msgstr ""

#: ../../../routing/routing_from_database.rst:11
msgid ""
"However, when working with large amounts of data that each need a nice "
"readable URL (e.g. for search engine optimization purposes), the routing "
"can get slowed down. Additionally, if routes need to be edited by users, "
"the route cache would need to be rebuilt frequently."
msgstr ""

#: ../../../routing/routing_from_database.rst:16
msgid "For these cases, the ``DynamicRouter`` offers an alternative approach:"
msgstr ""

#: ../../../routing/routing_from_database.rst:18
msgid "Routes are stored in a database;"
msgstr ""

#: ../../../routing/routing_from_database.rst:19
msgid ""
"There is a database index on the path field, the lookup scales to huge "
"numbers of different routes;"
msgstr ""

#: ../../../routing/routing_from_database.rst:21
msgid "Writes only affect the index of the database, which is very efficient."
msgstr ""

#: ../../../routing/routing_from_database.rst:23
msgid ""
"When all routes are known during deploy time and the number is not too "
"high, using a :doc:`custom route loader <custom_route_loader>` is the "
"preferred way to add more routes. When working with just one type of "
"objects, a slug parameter on the object and the ``@ParamConverter`` "
"annotation work fine (see `FrameworkExtraBundle`_) ."
msgstr ""

#: ../../../routing/routing_from_database.rst:29
msgid ""
"The ``DynamicRouter`` is useful when you need ``Route`` objects with the "
"full feature set of Symfony. Each route can define a specific controller "
"so you can decouple the URL structure from your application logic."
msgstr ""

#: ../../../routing/routing_from_database.rst:34
msgid ""
"The DynamicRouter comes with built-in support for Doctrine ORM and "
"Doctrine PHPCR-ODM but offers the ``ContentRepositoryInterface`` to write"
" a custom loader, e.g. for another database type or a REST API or "
"anything else."
msgstr ""

#: ../../../routing/routing_from_database.rst:38
msgid "The DynamicRouter is explained in the `Symfony CMF documentation`_."
msgstr ""

