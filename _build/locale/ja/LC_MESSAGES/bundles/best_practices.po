# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Symfony Framework
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-08 14:21+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../../bundles/best_practices.rst:5
msgid "Best Practices for Reusable Bundles"
msgstr ""

#: ../../../bundles/best_practices.rst:7
msgid ""
"This article is all about how to structure your **reusable bundles** to "
"be configurable and extendable. Reusable bundles are those meant to be "
"shared privately across many company projects or publicly so any Symfony "
"project can install them."
msgstr ""

#: ../../../bundles/best_practices.rst:18
msgid "Bundle Name"
msgstr ""

#: ../../../bundles/best_practices.rst:20
msgid ""
"A bundle is also a PHP namespace. The namespace must follow the `PSR-4`_ "
"interoperability standard for PHP namespaces and class names: it starts "
"with a vendor segment, followed by zero or more category segments, and it"
" ends with the namespace short name, which must end with ``Bundle``."
msgstr ""

#: ../../../bundles/best_practices.rst:25
msgid ""
"A namespace becomes a bundle as soon as you add a bundle class to it. The"
" bundle class name must follow these rules:"
msgstr ""

#: ../../../bundles/best_practices.rst:28
msgid "Use only alphanumeric characters and underscores;"
msgstr ""

#: ../../../bundles/best_practices.rst:29
msgid "Use a StudlyCaps name (i.e. camelCase with an uppercase first letter);"
msgstr ""

#: ../../../bundles/best_practices.rst:30
msgid "Use a descriptive and short name (no more than two words);"
msgstr ""

#: ../../../bundles/best_practices.rst:31
msgid ""
"Prefix the name with the concatenation of the vendor (and optionally the "
"category namespaces);"
msgstr ""

#: ../../../bundles/best_practices.rst:33
msgid "Suffix the name with ``Bundle``."
msgstr ""

#: ../../../bundles/best_practices.rst:35
msgid "Here are some valid bundle namespaces and class names:"
msgstr ""

#: ../../../bundles/best_practices.rst:38
msgid "Namespace"
msgstr ""

#: ../../../bundles/best_practices.rst:38
msgid "Bundle Class Name"
msgstr ""

#: ../../../bundles/best_practices.rst:40
msgid "``Acme\\Bundle\\BlogBundle``"
msgstr ""

#: ../../../bundles/best_practices.rst:40
#: ../../../bundles/best_practices.rst:41
msgid "AcmeBlogBundle"
msgstr ""

#: ../../../bundles/best_practices.rst:41
msgid "``Acme\\BlogBundle``"
msgstr ""

#: ../../../bundles/best_practices.rst:44
msgid ""
"By convention, the ``getName()`` method of the bundle class should return"
" the class name."
msgstr ""

#: ../../../bundles/best_practices.rst:49
msgid ""
"If you share your bundle publicly, you must use the bundle class name as "
"the name of the repository (AcmeBlogBundle and not BlogBundle for "
"instance)."
msgstr ""

#: ../../../bundles/best_practices.rst:54
msgid ""
"Symfony core Bundles do not prefix the Bundle class with ``Symfony`` and "
"always add a ``Bundle`` sub-namespace; for example: "
":class:`Symfony\\\\Bundle\\\\FrameworkBundle\\\\FrameworkBundle`."
msgstr ""

#: ../../../bundles/best_practices.rst:58
msgid ""
"Each bundle has an alias, which is the lower-cased short version of the "
"bundle name using underscores (``acme_blog`` for AcmeBlogBundle). This "
"alias is used to enforce uniqueness within a project and for defining "
"bundle's configuration options (see below for some usage examples)."
msgstr ""

#: ../../../bundles/best_practices.rst:64
msgid "Directory Structure"
msgstr ""

#: ../../../bundles/best_practices.rst:66
msgid "The basic directory structure of an AcmeBlogBundle must read as follows:"
msgstr ""

#: ../../../bundles/best_practices.rst:84
msgid ""
"**The following files are mandatory**, because they ensure a structure "
"convention that automated tools can rely on:"
msgstr ""

#: ../../../bundles/best_practices.rst:87
msgid ""
"``AcmeBlogBundle.php``: This is the class that transforms a plain "
"directory into a Symfony bundle (change this to your bundle's name);"
msgstr ""

#: ../../../bundles/best_practices.rst:89
msgid ""
"``README.md``: This file contains the basic description of the bundle and"
" it usually shows some basic examples and links to its full documentation"
" (it can use any of the markup formats supported by GitHub, such as "
"``README.rst``);"
msgstr ""

#: ../../../bundles/best_practices.rst:92
msgid ""
"``LICENSE``: The full contents of the license used by the code. Most "
"third-party bundles are published under the MIT license, but you can "
"`choose any license`_;"
msgstr ""

#: ../../../bundles/best_practices.rst:94
msgid "``Resources/doc/index.rst``: The root file for the Bundle documentation."
msgstr ""

#: ../../../bundles/best_practices.rst:96
msgid ""
"The depth of subdirectories should be kept to a minimum for the most used"
" classes and files. Two levels is the maximum."
msgstr ""

#: ../../../bundles/best_practices.rst:99
msgid ""
"The bundle directory is read-only. If you need to write temporary files, "
"store them under the ``cache/`` or ``log/`` directory of the host "
"application. Tools can generate files in the bundle directory structure, "
"but only if the generated files are going to be part of the repository."
msgstr ""

#: ../../../bundles/best_practices.rst:104
msgid ""
"The following classes and files have specific emplacements (some are "
"mandatory and others are just conventions followed by most developers):"
msgstr ""

#: ../../../bundles/best_practices.rst:108
msgid "Type"
msgstr ""

#: ../../../bundles/best_practices.rst:108
msgid "Directory"
msgstr ""

#: ../../../bundles/best_practices.rst:110
msgid "Commands"
msgstr ""

#: ../../../bundles/best_practices.rst:110
msgid "``Command/``"
msgstr ""

#: ../../../bundles/best_practices.rst:111
msgid "Controllers"
msgstr ""

#: ../../../bundles/best_practices.rst:111
msgid "``Controller/``"
msgstr ""

#: ../../../bundles/best_practices.rst:112
msgid "Service Container Extensions"
msgstr ""

#: ../../../bundles/best_practices.rst:112
msgid "``DependencyInjection/``"
msgstr ""

#: ../../../bundles/best_practices.rst:113
msgid "Doctrine ORM entities (when not using annotations)"
msgstr ""

#: ../../../bundles/best_practices.rst:113
msgid "``Entity/``"
msgstr ""

#: ../../../bundles/best_practices.rst:114
msgid "Doctrine ODM documents (when not using annotations)"
msgstr ""

#: ../../../bundles/best_practices.rst:114
msgid "``Document/``"
msgstr ""

#: ../../../bundles/best_practices.rst:115
msgid "Event Listeners"
msgstr ""

#: ../../../bundles/best_practices.rst:115
msgid "``EventListener/``"
msgstr ""

#: ../../../bundles/best_practices.rst:116
msgid "Configuration (routes, services, etc.)"
msgstr ""

#: ../../../bundles/best_practices.rst:116
msgid "``Resources/config/``"
msgstr ""

#: ../../../bundles/best_practices.rst:117
msgid "Web Assets (CSS, JS, images)"
msgstr ""

#: ../../../bundles/best_practices.rst:117
msgid "``Resources/public/``"
msgstr ""

#: ../../../bundles/best_practices.rst:118
msgid "Translation files"
msgstr ""

#: ../../../bundles/best_practices.rst:118
msgid "``Resources/translations/``"
msgstr ""

#: ../../../bundles/best_practices.rst:119
msgid "Validation (when not using annotations)"
msgstr ""

#: ../../../bundles/best_practices.rst:119
msgid "``Resources/config/validation/``"
msgstr ""

#: ../../../bundles/best_practices.rst:120
msgid "Serialization (when not using annotations)"
msgstr ""

#: ../../../bundles/best_practices.rst:120
msgid "``Resources/config/serialization/``"
msgstr ""

#: ../../../bundles/best_practices.rst:121
#: ../../../bundles/best_practices.rst:378
msgid "Templates"
msgstr ""

#: ../../../bundles/best_practices.rst:121
msgid "``Resources/views/``"
msgstr ""

#: ../../../bundles/best_practices.rst:122
msgid "Unit and Functional Tests"
msgstr ""

#: ../../../bundles/best_practices.rst:122
msgid "``Tests/``"
msgstr ""

#: ../../../bundles/best_practices.rst:126
msgid "Classes"
msgstr ""

#: ../../../bundles/best_practices.rst:128
msgid ""
"The bundle directory structure is used as the namespace hierarchy. For "
"instance, a ``ContentController`` controller which is stored in "
"``Acme/BlogBundle/Controller/ContentController.php`` would have the fully"
" qualified class name of "
"``Acme\\BlogBundle\\Controller\\ContentController``."
msgstr ""

#: ../../../bundles/best_practices.rst:133
msgid ""
"All classes and files must follow the :doc:`Symfony coding standards "
"</contributing/code/standards>`."
msgstr ""

#: ../../../bundles/best_practices.rst:135
msgid ""
"Some classes should be seen as facades and should be as short as "
"possible, like Commands, Helpers, Listeners and Controllers."
msgstr ""

#: ../../../bundles/best_practices.rst:138
msgid ""
"Classes that connect to the event dispatcher should be suffixed with "
"``Listener``."
msgstr ""

#: ../../../bundles/best_practices.rst:141
msgid "Exception classes should be stored in an ``Exception`` sub-namespace."
msgstr ""

#: ../../../bundles/best_practices.rst:144
msgid "Vendors"
msgstr ""

#: ../../../bundles/best_practices.rst:146
msgid ""
"A bundle must not embed third-party PHP libraries. It should rely on the "
"standard Symfony autoloading instead."
msgstr ""

#: ../../../bundles/best_practices.rst:149
msgid ""
"A bundle should also not embed third-party libraries written in "
"JavaScript, CSS or any other language."
msgstr ""

#: ../../../bundles/best_practices.rst:153
msgid "Tests"
msgstr ""

#: ../../../bundles/best_practices.rst:155
msgid ""
"A bundle should come with a test suite written with PHPUnit and stored "
"under the ``Tests/`` directory. Tests should follow the following "
"principles:"
msgstr ""

#: ../../../bundles/best_practices.rst:158
msgid ""
"The test suite must be executable with a simple ``phpunit`` command run "
"from a sample application;"
msgstr ""

#: ../../../bundles/best_practices.rst:160
msgid ""
"The functional tests should only be used to test the response output and "
"some profiling information if you have some;"
msgstr ""

#: ../../../bundles/best_practices.rst:162
#, python-format
msgid "The tests should cover at least 95% of the code base."
msgstr ""

#: ../../../bundles/best_practices.rst:166
msgid ""
"A test suite must not contain ``AllTests.php`` scripts, but must rely on "
"the existence of a ``phpunit.xml.dist`` file."
msgstr ""

#: ../../../bundles/best_practices.rst:170
msgid "Continuous Integration"
msgstr ""

#: ../../../bundles/best_practices.rst:172
msgid ""
"Testing bundle code continuously, including all its commits and pull "
"requests, is a good practice called Continuous Integration. There are "
"several services providing this feature for free for open source "
"projects. The most popular service for Symfony bundles is called `Travis "
"CI`_."
msgstr ""

#: ../../../bundles/best_practices.rst:177
msgid ""
"Here is the recommended configuration file (``.travis.yml``) for Symfony "
"bundles, which test the two latest :doc:`LTS versions "
"</contributing/community/releases>` of Symfony and the latest beta "
"release:"
msgstr ""

#: ../../../bundles/best_practices.rst:239
msgid ""
"Consider using the `Travis cron`_ tool to make sure your project is built"
" even if there are no new pull requests or commits."
msgstr ""

#: ../../../bundles/best_practices.rst:243
msgid "Installation"
msgstr ""

#: ../../../bundles/best_practices.rst:245
msgid ""
"Bundles should set ``\"type\": \"symfony-bundle\"`` in their "
"``composer.json`` file. With this, :ref:`Symfony Flex <symfony-flex>` "
"will be able to automatically enable your bundle when it's installed."
msgstr ""

#: ../../../bundles/best_practices.rst:249
msgid ""
"If your bundle requires any setup (e.g. configuration, new files, changes"
" to ``.gitignore``, etc), then you should create a `Symfony Flex "
"recipe`_."
msgstr ""

#: ../../../bundles/best_practices.rst:253
msgid "Documentation"
msgstr ""

#: ../../../bundles/best_practices.rst:255
msgid "All classes and functions must come with full PHPDoc."
msgstr ""

#: ../../../bundles/best_practices.rst:257
msgid ""
"Extensive documentation should also be provided in the ``Resources/doc/``"
" directory. The index file (for example ``Resources/doc/index.rst`` or "
"``Resources/doc/index.md``) is the only mandatory file and must be the "
"entry point for the documentation. The :doc:`reStructuredText (rST) "
"</contributing/documentation/format>` is the format used to render the "
"documentation on the Symfony website."
msgstr ""

#: ../../../bundles/best_practices.rst:266
msgid "Installation Instructions"
msgstr ""

#: ../../../bundles/best_practices.rst:268
msgid ""
"In order to ease the installation of third-party bundles, consider using "
"the following standardized instructions in your ``README.md`` file."
msgstr ""

#: ../../../bundles/best_practices.rst:360
msgid ""
"The example above assumes that you are installing the latest stable "
"version of the bundle, where you don't have to provide the package "
"version number (e.g. ``composer require friendsofsymfony/user-bundle``). "
"If the installation instructions refer to some past bundle version or to "
"some unstable version, include the version constraint (e.g. ``composer "
"require friendsofsymfony/user-bundle \"~2.0@dev\"``)."
msgstr ""

#: ../../../bundles/best_practices.rst:366
msgid ""
"Optionally, you can add more installation steps (*Step 3*, *Step 4*, "
"etc.) to explain other required installation tasks, such as registering "
"routes or dumping assets."
msgstr ""

#: ../../../bundles/best_practices.rst:371
msgid "Routing"
msgstr ""

#: ../../../bundles/best_practices.rst:373
msgid ""
"If the bundle provides routes, they must be prefixed with the bundle "
"alias. For example, if your bundle is called AcmeBlogBundle, all its "
"routes must be prefixed with ``acme_blog_``."
msgstr ""

#: ../../../bundles/best_practices.rst:380
msgid ""
"If a bundle provides templates, they must use Twig. A bundle must not "
"provide a main layout, except if it provides a full working application."
msgstr ""

#: ../../../bundles/best_practices.rst:384
msgid "Translation Files"
msgstr ""

#: ../../../bundles/best_practices.rst:386
msgid ""
"If a bundle provides message translations, they must be defined in the "
"XLIFF format; the domain should be named after the bundle name "
"(``acme_blog``)."
msgstr ""

#: ../../../bundles/best_practices.rst:389
msgid "A bundle must not override existing messages from another bundle."
msgstr ""

#: ../../../bundles/best_practices.rst:392
msgid "Configuration"
msgstr ""

#: ../../../bundles/best_practices.rst:394
msgid ""
"To provide more flexibility, a bundle can provide configurable settings "
"by using the Symfony built-in mechanisms."
msgstr ""

#: ../../../bundles/best_practices.rst:397
msgid ""
"For simple configuration settings, rely on the default ``parameters`` "
"entry of the Symfony configuration. Symfony parameters are simple "
"key/value pairs; a value being any valid PHP value. Each parameter name "
"should start with the bundle alias, though this is just a best-practice "
"suggestion. The rest of the parameter name will use a period (``.``) to "
"separate different parts (e.g. ``acme_blog.author.email``)."
msgstr ""

#: ../../../bundles/best_practices.rst:404
msgid "The end user can provide values in any configuration file:"
msgstr ""

#: ../../../bundles/best_practices.rst:434
msgid "Retrieve the configuration parameters in your code from the container::"
msgstr ""

#: ../../../bundles/best_practices.rst:438
msgid ""
"While this mechanism requires the least effort, you should consider using"
" the more advanced :doc:`semantic bundle configuration "
"</bundles/configuration>` to make your configuration more robust."
msgstr ""

#: ../../../bundles/best_practices.rst:443
msgid "Versioning"
msgstr ""

#: ../../../bundles/best_practices.rst:445
msgid "Bundles must be versioned following the `Semantic Versioning Standard`_."
msgstr ""

#: ../../../bundles/best_practices.rst:448
msgid "Services"
msgstr ""

#: ../../../bundles/best_practices.rst:450
msgid ""
"If the bundle defines services, they must be prefixed with the bundle "
"alias instead of using fully qualified class names like you do in your "
"project services. For example, AcmeBlogBundle services must be prefixed "
"with ``acme_blog``. The reason is that bundles shouldn't rely on features"
" such as service autowiring or autoconfiguration to not impose an "
"overhead when compiling application services."
msgstr ""

#: ../../../bundles/best_practices.rst:456
msgid ""
"In addition, services not meant to be used by the application directly, "
"should be :ref:`defined as private <container-private-services>`. For "
"public services, :ref:`aliases should be created <service-autowiring-"
"alias>` from the interface/class to the service id. For example, in "
"MonologBundle, an alias is created from ``Psr\\Log\\LoggerInterface`` to "
"``logger`` so that the ``LoggerInterface`` type-hint can be used for "
"autowiring."
msgstr ""

#: ../../../bundles/best_practices.rst:463
msgid ""
"Services should not use autowiring or autoconfiguration. Instead, all "
"services should be defined explicitly."
msgstr ""

#: ../../../bundles/best_practices.rst:468
msgid ""
"You can learn much more about service loading in bundles reading this "
"article: :doc:`How to Load Service Configuration inside a Bundle "
"</bundles/extension>`."
msgstr ""

#: ../../../bundles/best_practices.rst:472
msgid "Composer Metadata"
msgstr ""

#: ../../../bundles/best_practices.rst:474
msgid "The ``composer.json`` file should include at least the following metadata:"
msgstr ""

#: ../../../bundles/best_practices.rst:482
msgid "``name``"
msgstr ""

#: ../../../bundles/best_practices.rst:477
msgid ""
"Consists of the vendor and the short bundle name. If you are releasing "
"the bundle on your own instead of on behalf of a company, use your "
"personal name (e.g. ``johnsmith/blog-bundle``). Exclude the vendor name "
"from the bundle short name and separate each word with an hyphen. For "
"example: AcmeBlogBundle is transformed into ``blog-bundle`` and "
"AcmeSocialConnectBundle is transformed into ``social-connect-bundle``."
msgstr ""

#: ../../../bundles/best_practices.rst:485
msgid "``description``"
msgstr ""

#: ../../../bundles/best_practices.rst:485
msgid "A brief explanation of the purpose of the bundle."
msgstr ""

#: ../../../bundles/best_practices.rst:488
msgid "``type``"
msgstr ""

#: ../../../bundles/best_practices.rst:488
msgid "Use the ``symfony-bundle`` value."
msgstr ""

#: ../../../bundles/best_practices.rst:491
msgid "``license``"
msgstr ""

#: ../../../bundles/best_practices.rst:491
msgid ""
"a string (or array of strings) with a `valid license identifier`_, such "
"as ``MIT``."
msgstr ""

#: ../../../bundles/best_practices.rst:500
msgid "``autoload``"
msgstr ""

#: ../../../bundles/best_practices.rst:494
msgid ""
"This information is used by Symfony to load the classes of the bundle. "
"It's recommended to use the `PSR-4`_ autoload standard: use the namespace"
" as key, and the location of the bundle's main class (relative to "
"``composer.json``) as value. For example, if the main class is located in"
" the bundle root directory: ``\"autoload\": { \"psr-4\": { "
"\"SomeVendor\\\\BlogBundle\\\\\": \"\" } }``. If the main class is "
"located in the ``src/`` directory of the bundle: ``\"autoload\": { "
"\"psr-4\": { \"SomeVendor\\\\BlogBundle\\\\\": \"src/\" } }``."
msgstr ""

#: ../../../bundles/best_practices.rst:502
msgid ""
"In order to make it easier for developers to find your bundle, register "
"it on `Packagist`_, the official repository for Composer packages."
msgstr ""

#: ../../../bundles/best_practices.rst:506
msgid "Resources"
msgstr ""

#: ../../../bundles/best_practices.rst:508
msgid ""
"If the bundle references any resources (config files, translation files, "
"etc.), don't use physical paths (e.g. ``__DIR__/config/services.xml``) "
"but logical paths (e.g. ``@FooBundle/Resources/config/services.xml``)."
msgstr ""

#: ../../../bundles/best_practices.rst:512
msgid ""
"The logical paths are required because of the bundle overriding mechanism"
" that lets you override any resource/file of any bundle. See :ref:`http-"
"kernel-resource-locator` for more details about transforming physical "
"paths into logical paths."
msgstr ""

#: ../../../bundles/best_practices.rst:516
msgid ""
"Beware that templates use a simplified version of the logical path shown "
"above. For example, an ``index.html.twig`` template located in the "
"``Resources/views/Default/`` directory of the FooBundle, is referenced as"
" ``@Foo/Default/index.html.twig``."
msgstr ""

#: ../../../bundles/best_practices.rst:521
msgid "Learn more"
msgstr ""

#: ../../../bundles/best_practices.rst:523
msgid ":doc:`/bundles/extension`"
msgstr ""

#: ../../../bundles/best_practices.rst:524
msgid ":doc:`/bundles/configuration`"
msgstr ""

