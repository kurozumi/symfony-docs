# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Symfony Framework
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-08 14:21+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../../setup/flex.rst:4
msgid "Upgrading Existing Applications to Symfony Flex"
msgstr ""

#: ../../../setup/flex.rst:6
msgid ""
"Using Symfony Flex is optional, even in Symfony 4, where Flex is used by "
"default. However, Flex is so convenient and improves your productivity so"
" much that it's strongly recommended to upgrade your existing "
"applications to it."
msgstr ""

#: ../../../setup/flex.rst:10
msgid ""
"Symfony Flex recommends that applications use the following directory "
"structure, which is the same used by default in Symfony 4, but you can "
":ref:`customize some directories <flex-customize-paths>`:"
msgstr ""

#: ../../../setup/flex.rst:36
msgid ""
"This means that installing the ``symfony/flex`` dependency in your "
"application is not enough. You must also upgrade the directory structure "
"to the one shown above. There's no automatic tool to make this upgrade, "
"so you must follow these manual steps:"
msgstr ""

#: ../../../setup/flex.rst:41
msgid "Install Flex as a dependency of your project:"
msgstr ""

#: ../../../setup/flex.rst:47
msgid ""
"If the project's ``composer.json`` file contains ``symfony/symfony`` "
"dependency, it still depends on the Symfony Standard Edition, which is no"
" longer available in Symfony 4. First, remove this dependency:"
msgstr ""

#: ../../../setup/flex.rst:55
msgid ""
"Now add the ``symfony/symfony`` package to the ``conflict`` section of "
"the project's ``composer.json`` file as `shown in this example of the "
"skeleton-project`_ so that it will not be installed again:"
msgstr ""

#: ../../../setup/flex.rst:70
msgid ""
"Now you must add in ``composer.json`` all the Symfony dependencies "
"required by your project. A quick way to do that is to add all the "
"components that were included in the previous ``symfony/symfony`` "
"dependency and later you can remove anything you don't really need:"
msgstr ""

#: ../../../setup/flex.rst:81
msgid ""
"If the project's ``composer.json`` file doesn't contain the "
"``symfony/symfony`` dependency, it already defines its dependencies "
"explicitly, as required by Flex. Reinstall all dependencies to force Flex"
" to generate the configuration files in ``config/``, which is the most "
"tedious part of the upgrade process:"
msgstr ""

#: ../../../setup/flex.rst:92
msgid ""
"No matter which of the previous steps you followed. At this point, you'll"
" have lots of new config files in ``config/``. They contain the default "
"config defined by Symfony, so you must check your original files in "
"``app/config/`` and make the needed changes in the new files. Flex config"
" doesn't use suffixes in config files, so the old "
"``app/config/config_dev.yml`` goes to ``config/packages/dev/*.yaml``, "
"etc."
msgstr ""

#: ../../../setup/flex.rst:99
msgid ""
"The most important config file is ``app/config/services.yml``, which now "
"is located at ``config/services.yaml``. Copy the contents of the `default"
" services.yaml file`_ and then add your own service configuration. Later "
"you can revisit this file because thanks to Symfony's :doc:`autowiring "
"feature </service_container/3.3-di-changes>` you can remove most of the "
"service configuration."
msgstr ""

#: ../../../setup/flex.rst:108
msgid ""
"Make sure that your previous configuration files don't have ``imports`` "
"declarations pointing to resources already loaded by "
"``Kernel::configureContainer()`` or ``Kernel::configureRoutes()`` "
"methods."
msgstr ""

#: ../../../setup/flex.rst:112
msgid ""
"Move the rest of the ``app/`` contents as follows (and after that, remove"
" the ``app/`` directory):"
msgstr ""

#: ../../../setup/flex.rst:115
msgid "``app/Resources/views/`` -> ``templates/``"
msgstr ""

#: ../../../setup/flex.rst:116
msgid "``app/Resources/translations/`` -> ``translations/``"
msgstr ""

#: ../../../setup/flex.rst:117
msgid ""
"``app/Resources/<BundleName>/views/`` -> "
"``templates/bundles/<BundleName>/``"
msgstr ""

#: ../../../setup/flex.rst:118
msgid "rest of ``app/Resources/`` files -> ``src/Resources/``"
msgstr ""

#: ../../../setup/flex.rst:120
msgid ""
"Move the original PHP source code from ``src/AppBundle/*``, except bundle"
" specific files (like ``AppBundle.php`` and ``DependencyInjection/``), to"
" ``src/``."
msgstr ""

#: ../../../setup/flex.rst:124
msgid ""
"In addition to moving the files, update the ``autoload`` and ``autoload-"
"dev`` values of the ``composer.json`` file as `shown in this example`_ to"
" use ``App\\`` and ``App\\Tests\\`` as the application namespaces "
"(advanced IDEs can do this automatically)."
msgstr ""

#: ../../../setup/flex.rst:129
msgid ""
"If you used multiple bundles to organize your code, you must reorganize "
"your code into ``src/``. For example, if you had "
"``src/UserBundle/Controller/DefaultController.php`` and "
"``src/ProductBundle/Controller/DefaultController.php``, you could move "
"them to ``src/Controller/UserController.php`` and "
"``src/Controller/ProductController.php``."
msgstr ""

#: ../../../setup/flex.rst:134
msgid ""
"Move the public assets, such as images or compiled CSS/JS files, from "
"``src/AppBundle/Resources/public/`` to ``public/`` (e.g. "
"``public/images/``)."
msgstr ""

#: ../../../setup/flex.rst:137
msgid ""
"Move the source of the assets (e.g. the SCSS files) to ``assets/`` and "
"use :doc:`Webpack Encore </frontend>` to manage and compile them."
msgstr ""

#: ../../../setup/flex.rst:140
msgid ""
"``SYMFONY_DEBUG`` and ``SYMFONY_ENV`` environment variables were replaced"
" by ``APP_DEBUG`` and ``APP_ENV``. Copy their values to the new vars and "
"then remove the former ones."
msgstr ""

#: ../../../setup/flex.rst:144
msgid ""
"Create the new ``public/index.php`` front controller `copying Symfony's "
"index.php source`_ and, if you made any customization in your "
"``web/app.php`` and ``web/app_dev.php`` files, copy those changes into "
"the new file. You can now remove the old ``web/`` dir."
msgstr ""

#: ../../../setup/flex.rst:149
msgid ""
"Update the ``bin/console`` script `copying Symfony's bin/console source`_"
" and changing anything according to your original console script."
msgstr ""

#: ../../../setup/flex.rst:152
msgid "Remove ``src/AppBundle/``."
msgstr ""

#: ../../../setup/flex.rst:154
msgid ""
"Move the original source code from ``src/{App,...}Bundle/`` to ``src/`` "
"and update the namespaces of every PHP file to be ``App\\...`` (advanced "
"IDEs can do this automatically)."
msgstr ""

#: ../../../setup/flex.rst:158
msgid ""
"Remove the ``bin/symfony_requirements`` script and if you need a "
"replacement for it, use the new `Symfony Requirements Checker`_."
msgstr ""

#: ../../../setup/flex.rst:161
msgid ""
"Update the ``.gitignore`` file to replace the existing ``var/logs/`` "
"entry by ``var/log/``, which is the new name for the log directory."
msgstr ""

#: ../../../setup/flex.rst:167
msgid "Customizing Flex Paths"
msgstr ""

#: ../../../setup/flex.rst:169
msgid ""
"The Flex recipes make a few assumptions about your project's directory "
"structure. Some of these assumptions can be customized by adding a key "
"under the ``extra`` section of your ``composer.json`` file. For example, "
"to tell Flex to copy any PHP classes into ``src/App`` instead of ``src``:"
msgstr ""

#: ../../../setup/flex.rst:184
msgid "The configurable paths are:"
msgstr ""

#: ../../../setup/flex.rst:186
msgid "``bin-dir``: defaults to ``bin/``"
msgstr ""

#: ../../../setup/flex.rst:187
msgid "``config-dir``: defaults to ``config/``"
msgstr ""

#: ../../../setup/flex.rst:188
msgid "``src-dir`` defaults to ``src/``"
msgstr ""

#: ../../../setup/flex.rst:189
msgid "``var-dir`` defaults to ``var/``"
msgstr ""

#: ../../../setup/flex.rst:190
msgid "``public-dir`` defaults to ``public/``"
msgstr ""

#: ../../../setup/flex.rst:192
msgid ""
"If you customize these paths, some files copied from a recipe still may "
"contain references to the original path. In other words: you may need to "
"update some things manually after a recipe is installed."
msgstr ""

