# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Symfony Framework
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-08 14:21+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../../setup/upgrade_minor.rst:5
msgid "Upgrading a Minor Version (e.g. 4.0.0 to 4.1.0)"
msgstr ""

#: ../../../setup/upgrade_minor.rst:7
msgid ""
"If you're upgrading a minor version (where the middle number changes), "
"then you should *not* encounter significant backward compatibility "
"changes. For details, see the :doc:`Symfony backward compatibility "
"promise </contributing/code/bc>`."
msgstr ""

#: ../../../setup/upgrade_minor.rst:11
msgid ""
"However, some backwards-compatibility breaks *are* possible and you'll "
"learn in a second how to prepare for them."
msgstr ""

#: ../../../setup/upgrade_minor.rst:14
msgid "There are two steps to upgrading a minor version:"
msgstr ""

#: ../../../setup/upgrade_minor.rst:16
msgid ""
":ref:`Update the Symfony library via Composer <upgrade-minor-symfony-"
"composer>`;"
msgstr ""

#: ../../../setup/upgrade_minor.rst:17
msgid ""
":ref:`Update your code to work with the new version <upgrade-minor-"
"symfony-code>`."
msgstr ""

#: ../../../setup/upgrade_minor.rst:22
msgid "1) Update the Symfony Library via Composer"
msgstr ""

#: ../../../setup/upgrade_minor.rst:24
msgid ""
"The ``composer.json`` file is configured to allow Symfony packages to be "
"upgraded to patch versions. But to upgrade to a new minor version, you "
"will probably need to update the version constraint next to each library "
"starting ``symfony/``. Suppose you are upgrading from Symfony 4.3 to 4.4:"
msgstr ""

#: ../../../setup/upgrade_minor.rst:52
msgid ""
"Your ``composer.json`` file should also have an ``extra`` block that you "
"will *also* need to update:"
msgstr ""

#: ../../../setup/upgrade_minor.rst:65
msgid "Next, use Composer to download new versions of the libraries:"
msgstr ""

#: ../../../setup/_update_dep_errors.rst.inc:2
msgid "Dependency Errors"
msgstr ""

#: ../../../setup/_update_dep_errors.rst.inc:4
msgid ""
"If you get a dependency error, it may mean that you also need to upgrade "
"other libraries that are dependencies of the Symfony libraries. To allow "
"that, pass the ``--with-all-dependencies`` flag:"
msgstr ""

#: ../../../setup/_update_dep_errors.rst.inc:12
msgid ""
"This updates ``symfony/*`` and *all* packages that those packages depend "
"on. By using tight version constraints in ``composer.json``, you can "
"control what versions each library upgrades to."
msgstr ""

#: ../../../setup/_update_dep_errors.rst.inc:16
msgid ""
"If this still doesn't work, your ``composer.json`` file may specify a "
"version for a library that is not compatible with the newer Symfony "
"version. In that case, updating that library to a newer version in "
"``composer.json`` may solve the issue."
msgstr ""

#: ../../../setup/_update_dep_errors.rst.inc:21
msgid ""
"Or, you may have deeper issues where different libraries depend on "
"conflicting versions of other libraries. Check your error message to "
"debug."
msgstr ""

#: ../../../setup/_update_dep_errors.rst.inc:24
msgid ""
"Another issue that may happen is that the project dependencies can be "
"installed on your local computer but not on the remote server. This "
"usually happens when the PHP versions are different on each machine. The "
"solution is to add the `platform`_ config option to your `composer.json` "
"file to define the highest PHP version allowed for the dependencies (set "
"it to the server's PHP version)."
msgstr ""

#: ../../../setup/_update_all_packages.rst.inc:2
msgid "Upgrading other Packages"
msgstr ""

#: ../../../setup/_update_all_packages.rst.inc:4
msgid ""
"You may also want to upgrade the rest of your libraries. If you've done a"
" good job with your `version constraints`_ in ``composer.json``, you can "
"do this safely by running:"
msgstr ""

#: ../../../setup/_update_all_packages.rst.inc:14
msgid ""
"Beware, if you have some unspecific `version constraints`_ in your "
"``composer.json`` (e.g. ``dev-master``), this could upgrade some non-"
"Symfony libraries to new versions that contain backwards-compatibility "
"breaking changes."
msgstr ""

#: ../../../setup/upgrade_minor.rst:78
msgid "2) Updating your Code to Work with the new Version"
msgstr ""

#: ../../../setup/upgrade_minor.rst:80
msgid ""
"In theory, you should be done! However, you *may* need to make a few "
"changes to your code to get everything working. Additionally, some "
"features you're using might still work, but might now be deprecated. "
"While that's just fine, if you know about these deprecations, you can "
"start to fix them over time."
msgstr ""

#: ../../../setup/upgrade_minor.rst:85
msgid ""
"Every version of Symfony comes with an UPGRADE file (e.g. "
"`UPGRADE-4.4.md`_) included in the Symfony directory that describes these"
" changes. If you follow the instructions in the document and update your "
"code accordingly, it should be safe to update in the future."
msgstr ""

#: ../../../setup/upgrade_minor.rst:90
msgid "These documents can also be found in the `Symfony Repository`_."
msgstr ""

#: ../../../setup/upgrade_minor.rst:95
msgid "3) Updating Recipes"
msgstr ""

#: ../../../setup/upgrade_minor.rst:97
msgid ""
"Over time - and especially when you upgrade to a new version of a library"
" - an updated version of the :ref:`recipe <recipes-description>` may be "
"available. These updates are usually minor - e.g. new comments in a "
"configuration file - but it's a good idea to update the core Symfony "
"recipes."
msgstr ""

#: ../../../setup/upgrade_minor.rst:102
msgid ""
"Symfony Flex provides several commands to help upgrade your recipes. Be "
"sure to commit any unrelated changes you're working on before starting:"
msgstr ""

#: ../../../setup/upgrade_minor.rst:107
msgid "The recipes commands were introduced in Symfony Flex 1.6."
msgstr ""

#: ../../../setup/upgrade_minor.rst:120
msgid ""
"The tricky part of this process is that the recipe \"update\" does not "
"perform any intelligent \"upgrading\" of your code. Instead, **the "
"updates process re-installs the latest version of the recipe** which "
"means that **your custom code will be overridden completely**. After "
"updating a recipe, you need to carefully choose which changes you want, "
"and undo the rest."
msgstr ""

#: ../../../setup/upgrade_minor.rst:126
msgid "Screencast"
msgstr ""

#: ../../../setup/upgrade_minor.rst:129
msgid ""
"For a detailed example, see the `SymfonyCasts Symfony 5 Upgrade "
"Tutorial`_."
msgstr ""

