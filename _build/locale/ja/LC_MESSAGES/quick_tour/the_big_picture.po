# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Symfony Framework
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-08 14:21+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../../quick_tour/the_big_picture.rst:2
msgid "The Big Picture"
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:4
msgid ""
"Start using Symfony in 10 minutes! Really! That's all you need to "
"understand the most important concepts and start building a real project!"
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:7
msgid ""
"If you've used a web framework before, you should feel right at home with"
" Symfony. If not, welcome to a whole new way of developing web "
"applications. Symfony *embraces* best practices, keeps backwards "
"compatibility (Yes! Upgrading is always safe & easy!) and offers long-"
"term support."
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:15
msgid "Downloading Symfony"
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:17
msgid ""
"First, make sure you've installed `Composer`_ and have PHP 7.1.3 or "
"higher."
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:19
msgid "Ready? In a terminal, run:"
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:25
msgid ""
"This creates a new ``quick_tour/`` directory with a small, but powerful "
"new Symfony application:"
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:42
msgid ""
"Can we already load the project in a browser? Yes! You can setup "
":doc:`Nginx or Apache </setup/web_server_configuration>` and configure "
"their document root to be the ``public/`` directory. But, for "
"development, it's better to :doc:`install the Symfony local web server "
"</setup/symfony_server>` and run it as follows:"
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:52
msgid "Try your new app by going to ``http://localhost:8000`` in a browser!"
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:59
msgid "Fundamentals: Route, Controller, Response"
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:61
msgid ""
"Our project only has about 15 files, but it's ready to become a sleek "
"API, a robust web app, or a microservice. Symfony starts small, but "
"scales with you."
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:64
msgid ""
"But before we go too far, let's dig into the fundamentals by building our"
" first page."
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:66
msgid ""
"Start in ``config/routes.yaml``: this is where *we* can define the URL to"
" our new page. Uncomment the example that already lives in the file:"
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:76
msgid ""
"This is called a *route*: it defines the URL to your page (``/``) and the"
" \"controller\": the *function* that will be called whenever anyone goes "
"to this URL. That function doesn't exist yet, so let's create it!"
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:80
msgid ""
"In ``src/Controller``, create a new ``DefaultController`` class and an "
"``index`` method inside::"
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:96
msgid ""
"That's it! Try going to the homepage: ``http://localhost:8000/``. Symfony"
" sees that the URL matches our route and then executes the new "
"``index()`` method."
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:99
msgid ""
"A controller is just a normal function with *one* rule: it must return a "
"Symfony ``Response`` object. But that response can contain anything: "
"simple text, JSON or a full HTML page."
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:103
msgid ""
"But the routing system is *much* more powerful. So let's make the route "
"more interesting:"
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:113
msgid ""
"The URL to this page has changed: it is *now* ``/hello/*``: the "
"``{name}`` acts like a wildcard that matches anything. And it gets "
"better! Update the controller too:"
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:133
msgid ""
"Try the page out by going to ``http://localhost:8000/hello/Symfony``. You"
" should see: Hello Symfony! The value of the ``{name}`` in the URL is "
"available as a ``$name`` argument in your controller."
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:137
msgid "But this can be even simpler! So let's install annotations support:"
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:143
msgid "Now, comment-out the YAML route by adding the ``#`` character:"
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:152
msgid "Instead, add the route *right above* the controller method:"
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:172
msgid ""
"This works just like before! But by using annotations, the route and "
"controller live right next to each other. Need another page? Add another "
"route and method in ``DefaultController``::"
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:195
msgid ""
"Routing can do *even* more, but we'll save that for another time! Right "
"now, our app needs more features! Like a template engine, logging, "
"debugging tools and more."
msgstr ""

#: ../../../quick_tour/the_big_picture.rst:198
msgid "Keep reading with :doc:`/quick_tour/flex_recipes`."
msgstr ""

