# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Symfony Framework
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-08 14:21+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../../frontend/encore/versioning.rst:2
msgid "Asset Versioning"
msgstr ""

#: ../../../frontend/encore/versioning.rst:6
msgid ""
"Tired of deploying and having browser's cache the old version of your "
"assets? By calling ``enableVersioning()``, each filename will now include"
" a hash that changes whenever the *contents* of that file change (e.g. "
"``app.123abc.js`` instead of ``app.js``). This allows you to use "
"aggressive caching strategies (e.g. a far future ``Expires``) because, "
"whenever a file change, its hash will change, ignoring any existing "
"cache:"
msgstr ""

#: ../../../frontend/encore/versioning.rst:23
msgid ""
"To link to these assets, Encore creates two files ``entrypoints.json`` "
"and ``manifest.json``."
msgstr ""

#: ../../../frontend/encore/versioning.rst:29
msgid "Loading Assets from ``entrypoints.json`` & ``manifest.json``"
msgstr ""

#: ../../../frontend/encore/versioning.rst:31
msgid ""
"Whenever you run Encore, two configuration files are generated: "
"``entrypoints.json`` and ``manifest.json``. Each file is similar, and "
"contains a map to the final, versioned filename."
msgstr ""

#: ../../../frontend/encore/versioning.rst:35
msgid ""
"The first file - ``entrypoints.json`` - is used by the "
"``encore_entry_script_tags()`` and ``encore_entry_link_tags()`` Twig "
"helpers. If you're using these, then your CSS and JavaScript files will "
"render with the new, versioned filename. If you're not using Symfony, "
"your app will need to read this file in a similar way."
msgstr ""

#: ../../../frontend/encore/versioning.rst:40
msgid ""
"The ``manifest.json`` file is only needed to get the versioned filename "
"of *other* files, like font files or image files (though it also contains"
" information about the CSS and JavaScript files):"
msgstr ""

#: ../../../frontend/encore/versioning.rst:52
msgid ""
"In your app, you need to read this file if you want to be able to link "
"(e.g. via an ``img`` tag) to certain assets. If you're using Symfony, "
"just activate the ``json_manifest_file`` versioning strategy:"
msgstr ""

#: ../../../frontend/encore/versioning.rst:64
msgid ""
"That's it! Be sure to wrap each path in the Twig ``asset()`` function "
"like normal:"
msgstr ""

#: ../../../frontend/encore/versioning.rst:72
msgid "Troubleshooting"
msgstr ""

#: ../../../frontend/encore/versioning.rst:75
msgid "Asset Versioning and Deployment"
msgstr ""

#: ../../../frontend/encore/versioning.rst:77
msgid ""
"When deploying a new version of your application, versioned assets will "
"include a new hash, making the previous assets no longer available. This "
"is usually not a problem when deploying applications using a rolling "
"update, blue/green or symlink strategies."
msgstr ""

#: ../../../frontend/encore/versioning.rst:82
msgid ""
"However, even when applying those techniques, there could be a lapse of "
"time when some publicly/privately cached response requests the previous "
"version of the assets. If your application can't afford to serve any "
"broken asset, the best solution is to use a CDN (or custom made service) "
"that keeps all the old assets cached for some time."
msgstr ""

#: ../../../frontend/encore/versioning.rst:89
msgid "Learn more"
msgstr ""

#: ../../../frontend/encore/versioning.rst:91
msgid ":doc:`/components/asset`"
msgstr ""

