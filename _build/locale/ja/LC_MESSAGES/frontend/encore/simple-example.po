# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Symfony Framework
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-08 14:21+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../../frontend/encore/simple-example.rst:2
msgid "Encore: Setting up your Project"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:4
msgid ""
"After :doc:`installing Encore </frontend/encore/installation>`, your app "
"already has one CSS and one JS file, organized into an ``assets/`` "
"directory:"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:7
msgid "``assets/js/app.js``"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:8
msgid "``assets/css/app.css``"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:10
msgid ""
"With Encore, think of your ``app.js`` file like a standalone JavaScript "
"application: it will *require* all of the dependencies it needs (e.g. "
"jQuery or React), *including* any CSS. Your ``app.js`` file is already "
"doing this with a special ``require()`` function:"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:24
msgid ""
"Encore's job (via Webpack) is simple: to read and follow *all* of the "
"``require()`` statements and create one final ``app.js`` (and "
"``app.css``) that contains *everything* your app needs. Encore can do a "
"lot more: minify files, pre-process Sass/LESS, support React, Vue.js, "
"etc."
msgstr ""

#: ../../../frontend/encore/simple-example.rst:30
msgid "Configuring Encore/Webpack"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:32
msgid ""
"Everything in Encore is configured via a ``webpack.config.js`` file at "
"the root of your project. It already holds the basic config you need:"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:53
msgid ""
"They *key* part is ``addEntry()``: this tells Encore to load the "
"``assets/js/app.js`` file and follow *all* of the ``require()`` "
"statements. It will then package everything together and - thanks to the "
"first ``app`` argument - output final ``app.js`` and ``app.css`` files "
"into the ``public/build`` directory."
msgstr ""

#: ../../../frontend/encore/simple-example.rst:60
msgid "To build the assets, run:"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:75
msgid ""
"Stop and restart ``encore`` each time you update your "
"``webpack.config.js`` file."
msgstr ""

#: ../../../frontend/encore/simple-example.rst:77
msgid "Congrats! You now have three new files:"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:79
msgid "``public/build/app.js`` (holds all the JavaScript for your \"app\" entry)"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:80
msgid "``public/build/app.css`` (holds all the CSS for your \"app\" entry)"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:81
msgid "``public/build/runtime.js`` (a file that helps Webpack do its job)"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:83
msgid ""
"Next, include these in your base layout file. Two Twig helpers from "
"WebpackEncoreBundle can do most of the work for you:"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:117
msgid ""
"That's it! When you refresh your page, all of the JavaScript from "
"``assets/js/app.js`` - as well as any other JavaScript files it included "
"- will be executed. All the CSS files that were required will also be "
"displayed."
msgstr ""

#: ../../../frontend/encore/simple-example.rst:121
msgid ""
"The ``encore_entry_link_tags()`` and ``encore_entry_script_tags()`` "
"functions read from an ``entrypoints.json`` file that's generated by "
"Encore to know the exact filename(s) to render. This file is *especially*"
" useful because you can :doc:`enable "
"versioning</frontend/encore/versioning>` or :doc:`point assets to a "
"CDN</frontend/encore/cdn>` without making *any* changes to your template:"
" the paths in ``entrypoints.json`` will always be the final, correct "
"paths."
msgstr ""

#: ../../../frontend/encore/simple-example.rst:128
msgid ""
"If you're *not* using Symfony, you can ignore the ``entrypoints.json`` "
"file and point to the final, built file directly. ``entrypoints.json`` is"
" only required for some optional features."
msgstr ""

#: ../../../frontend/encore/simple-example.rst:134
msgid ""
"The ``encore_entry_link_tags()`` comes from WebpackEncoreBundle and "
"relies on a feature in Encore that was first introduced in version "
"0.21.0. Previously, the ``asset()`` function was used to point directly "
"to the file."
msgstr ""

#: ../../../frontend/encore/simple-example.rst:139
msgid "Requiring JavaScript Modules"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:141
msgid ""
"Webpack is a module bundler, which means that you can ``require`` other "
"JavaScript files. First, create a file that exports a function:"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:151
msgid "We'll use jQuery to print this message on the page. Install it via:"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:157
msgid "Great! Use ``require()`` to import ``jquery`` and ``greet.js``:"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:175
msgid ""
"That's it! If you previously ran ``encore dev --watch``, your final, "
"built files have already been updated: jQuery and ``greet.js`` have been "
"automatically added to the output file (``app.js``). Refresh to see the "
"message!"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:180
msgid "The import and export Statements"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:182
msgid ""
"Instead of using ``require()`` and ``module.exports`` like shown above, "
"JavaScript provides an alternate syntax based on the `ECMAScript 6 "
"modules`_ that includes the ability to use dynamic imports."
msgstr ""

#: ../../../frontend/encore/simple-example.rst:186
msgid "To export values using the alternate syntax, use ``export``:"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:196
msgid "To import values, use ``import``:"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:213
msgid "Page-Specific JavaScript or CSS (Multiple Entries)"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:215
msgid ""
"So far, you only have one final JavaScript file: ``app.js``. For small "
"applications or SPA's (Single Page Applications), that might be fine! "
"However, as your app grows, you may want to have page-specific JavaScript"
" or CSS (e.g. checkout, account, etc.). To handle this, create a new "
"\"entry\" JavaScript file for each page:"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:230
msgid ""
"Next, use ``addEntry()`` to tell Webpack to read these two new files when"
" it builds:"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:242
msgid ""
"And because you just changed the ``webpack.config.js`` file, make sure to"
" stop and restart Encore:"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:249
msgid ""
"Webpack will now output a new ``checkout.js`` file and a new "
"``account.js`` file in your build directory. And, if any of those files "
"require/import CSS, Webpack will *also* output ``checkout.css`` and "
"``account.css`` files."
msgstr ""

#: ../../../frontend/encore/simple-example.rst:253
msgid ""
"Finally, include the ``script`` and ``link`` tags on the individual pages"
" where you need them:"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:271
msgid ""
"Now, the checkout page will contain all the JavaScript and CSS for the "
"``app`` entry (because this is included in ``base.html.twig`` and there "
"is the ``{{ parent() }}`` call) *and* your ``checkout`` entry."
msgstr ""

#: ../../../frontend/encore/simple-example.rst:275
msgid ""
"See :doc:`/frontend/encore/page-specific-assets` for more details. To "
"avoid duplicating the same code in different entry files, see "
":doc:`/frontend/encore/split-chunks`."
msgstr ""

#: ../../../frontend/encore/simple-example.rst:279
msgid "Using Sass/LESS/Stylus"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:281
msgid ""
"You've already mastered the basics of Encore. Nice! But, there are *many*"
" more features that you can opt into if you need them. For example, "
"instead of using plain CSS you can also use Sass, LESS or Stylus. To use "
"Sass, rename the ``app.css`` file to ``app.scss`` and update the "
"``import`` statement:"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:292
msgid "Then, tell Encore to enable the Sass pre-processor:"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:303
msgid ""
"Because you just changed your ``webpack.config.js`` file, you'll need to "
"restart Encore. When you do, you'll see an error!"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:311
msgid ""
"Encore supports many features. But, instead of forcing all of them on "
"you, when you need a feature, Encore will tell you what you need to "
"install. Run:"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:319
msgid ""
"Your app now supports Sass. Encore also supports LESS and Stylus. See "
":doc:`/frontend/encore/css-preprocessors`."
msgstr ""

#: ../../../frontend/encore/simple-example.rst:323
msgid "Compiling Only a CSS File"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:327
msgid ""
"Using ``addStyleEntry()`` is supported, but not recommended. A better "
"option is to follow the pattern above: use ``addEntry()`` to point to a "
"JavaScript file, then require the CSS needed from inside of that."
msgstr ""

#: ../../../frontend/encore/simple-example.rst:331
msgid ""
"If you want to only compile a CSS file, that's possible via "
"``addStyleEntry()``:"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:342
msgid "This will output a new ``some_page.css``."
msgstr ""

#: ../../../frontend/encore/simple-example.rst:345
msgid "Keep Going!"
msgstr ""

#: ../../../frontend/encore/simple-example.rst:347
msgid ""
"Encore supports many more features! For a full list of what you can do, "
"see `Encore's index.js file`_. Or, go back to :ref:`list of Encore "
"articles <encore-toc>`."
msgstr ""

